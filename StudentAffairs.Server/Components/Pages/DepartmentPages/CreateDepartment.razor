@page "/create-department"
@inject ISnackbar Snackbar
@inject IStringLocalizer<Resource> _localizer
@inject IUnitOfWork _unitOfWork
@inject IMapper _mapper

<EditForm Model="@departmentModel" OnValidSubmit="OnValidSubmit">
    <FluentValidationValidator />
    <MudGrid>
        <MudItem xs="12" sm="7">
            <MudCard>
                <MudCardContent>
                    <!-- Department Name Field -->
                    <MudTextField Class="mb-4" @bind-Value="departmentModel.Name"
                                  For="@(() => departmentModel.Name)"
                                  Label=@_localizer["Name"]
                                  Immediate="true" />
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">
                        Submit
                    </MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
        <MudItem xs="12" sm="5">
            <MudPaper Class="pa-4 mud-height-full">
                <MudText Typo="Typo.subtitle2">Validation Summary</MudText>
                @if (success)
                {
                    <MudText Color="Color.Success">Success</MudText>
                }
                else
                {
                    <MudText Color="@Color.Error">
                        <ValidationSummary />
                    </MudText>
                }
            </MudPaper>
        </MudItem>
        <MudItem xs="12">
            <MudText Typo="Typo.body2" Align="Align.Center">
                Fill out the form correctly to see the success message.
            </MudText>
        </MudItem>
    </MudGrid>
</EditForm>

@code {
    private AddDepartmentDto departmentModel = new();
    bool success = false;

    private async Task OnValidSubmit()
    {
        success = true;
        await SaveDepartment(departmentModel);
        Snackbar.Add("Department added successfully!", MudBlazor.Severity.Success);
        departmentModel = new();  // Reset the form model
        success = false;
        StateHasChanged();
    }

    private async Task SaveDepartment(AddDepartmentDto departmentToCreateDto)
    {
        var department = _mapper.Map<AddDepartmentDto, Department>(departmentToCreateDto);

        var result = await _unitOfWork.GetDepartmentRepository().IsDepartmentExist(department);
        if (result)
        {
            Snackbar.Add("Department already exists!", MudBlazor.Severity.Error);
            return;
        }

        await _unitOfWork.Repository<Department>().AddAsync(department);
        await _unitOfWork.CompleteAsync();
    }
}
